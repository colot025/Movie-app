{"ast":null,"code":"var _jsxFileName = \"/Users/christyolotu/vidly/src/components/movies.jsx\";\nimport React, { Component } from \"react\";\nimport { getMovies, deleteMovie } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport MoviesTable from \"./moviesTable\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport _ from \"lodash\";\nimport SearchBox from \"./searchBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      currentPage: 1,\n      pageSize: 4,\n      searchQuery: \"\",\n      selectedGenre: null,\n      genres: [],\n      sortColumn: {\n        path: \"title\",\n        order: \"asc\"\n      }\n    };\n\n    this.handleDelete = async movie => {\n      const originalMovies = this.state.movies;\n      const movies = originalMovies.filter(m => m._id !== movie._id);\n      this.setState({\n        movies\n      });\n\n      try {\n        await deleteMovie(movie._id);\n      } catch (ex) {\n        if (ex.response && ex.response.status === 404) toast.error(\"This movie has already been delected.\");\n        this.setState({\n          movies: originalMovies\n        });\n      }\n    };\n\n    this.handleLike = movie => {\n      const movies = [...this.state.movies];\n      const index = movies.indexOf(movie);\n      movies[index] = { ...movies[index]\n      };\n      movies[index].liked = !movies[index].liked;\n      this.setState({\n        movies\n      });\n    };\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.handleGenreSelect = genre => {\n      this.setState({\n        selectedGenre: genre,\n        searchQuery: \"\",\n        currentPage: 1\n      });\n    };\n\n    this.handleSearch = query => {\n      this.setState({\n        searchQuery: query,\n        selectedGenre: null,\n        currentPage: 1\n      });\n    };\n\n    this.handleSort = sortColumn => {\n      this.setState({\n        sortColumn\n      });\n    };\n\n    this.getPagedData = () => {\n      const {\n        pageSize,\n        currentPage,\n        selectedGenre,\n        searchQuery,\n        sortColumn,\n        movies: allMovies\n      } = this.state;\n      let filtered = allMovies;\n      if (searchQuery) filtered = allMovies.filter(m => m.title.toLowerCase().startsWith(searchQuery.toLowerCase()));else if (selectedGenre && selectedGenre._id) filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\n\n      const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n      const movies = paginate(sorted, currentPage, pageSize);\n      return {\n        totalCount: filtered.length,\n        data: movies\n      };\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      data\n    } = await getGenres();\n    const genres = [{\n      _id: \"\",\n      name: \"All Genres\"\n    }, ...data];\n    const {\n      data: movies\n    } = await getMovies();\n    this.setState({\n      movies,\n      genres\n    });\n  }\n\n  render() {\n    const {\n      length: count\n    } = this.state.movies;\n    const {\n      pageSize,\n      currentPage,\n      sortColumn,\n      searchQuery\n    } = this.state;\n    const {\n      user\n    } = this.props;\n\n    if (count === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"There are no movies in the database.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 14\n      }, this);\n    }\n\n    const {\n      totalCount,\n      data: movies\n    } = this.getPagedData();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          items: this.state.genres,\n          selectedItem: this.state.selectedGenre,\n          onItemSelect: this.handleGenreSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/movies/new\",\n          className: \"btn btn-primary\",\n          style: {\n            marginBottom: 20\n          },\n          children: \"New Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Showing \", totalCount, \" movies in the database.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n          value: searchQuery,\n          onChange: this.handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MoviesTable, {\n          movies: movies,\n          sortColumn: sortColumn,\n          onLike: this.handleLike,\n          onDelete: this.handleDelete,\n          onSort: this.handleSort\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          itemsCount: totalCount,\n          pageSize: pageSize,\n          currentPage: currentPage,\n          onPageChange: this.handlePageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["/Users/christyolotu/vidly/src/components/movies.jsx"],"names":["React","Component","getMovies","deleteMovie","getGenres","Pagination","paginate","ListGroup","MoviesTable","Link","toast","_","SearchBox","Movies","state","movies","currentPage","pageSize","searchQuery","selectedGenre","genres","sortColumn","path","order","handleDelete","movie","originalMovies","filter","m","_id","setState","ex","response","status","error","handleLike","index","indexOf","liked","handlePageChange","page","handleGenreSelect","genre","handleSearch","query","handleSort","getPagedData","allMovies","filtered","title","toLowerCase","startsWith","sorted","orderBy","totalCount","length","data","componentDidMount","name","render","count","user","props","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { getMovies, deleteMovie } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport MoviesTable from \"./moviesTable\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport _ from \"lodash\";\nimport SearchBox from \"./searchBox\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    currentPage: 1,\n    pageSize: 4,\n    searchQuery: \"\",\n    selectedGenre: null,\n    genres: [],\n    sortColumn: { path: \"title\", order: \"asc\" },\n  };\n\n  async componentDidMount() {\n    const { data } = await getGenres();\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\n\n    const { data: movies } = await getMovies();\n    this.setState({ movies, genres });\n  }\n\n  handleDelete = async (movie) => {\n    const originalMovies = this.state.movies;\n    const movies = originalMovies.filter((m) => m._id !== movie._id);\n    this.setState({ movies });\n\n    try {\n      await deleteMovie(movie._id);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404)\n        toast.error(\"This movie has already been delected.\");\n\n      this.setState({ movies: originalMovies });\n    }\n  };\n\n  handleLike = (movie) => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n  handleGenreSelect = (genre) => {\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\n  };\n  handleSearch = (query) => {\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\n  };\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n  getPagedData = () => {\n    const {\n      pageSize,\n      currentPage,\n      selectedGenre,\n      searchQuery,\n      sortColumn,\n      movies: allMovies,\n    } = this.state;\n\n    let filtered = allMovies;\n    if (searchQuery)\n      filtered = allMovies.filter((m) =>\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n    else if (selectedGenre && selectedGenre._id)\n      filtered = allMovies.filter((m) => m.genre._id === selectedGenre._id);\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filtered.length, data: movies };\n  };\n  render() {\n    const { length: count } = this.state.movies;\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\n    const { user } = this.props;\n\n    if (count === 0) {\n      return <p>There are no movies in the database.</p>;\n    }\n    const { totalCount, data: movies } = this.getPagedData();\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <ListGroup\n            items={this.state.genres}\n            selectedItem={this.state.selectedGenre}\n            onItemSelect={this.handleGenreSelect}\n          />\n        </div>\n        <div className=\"col\">\n          <Link\n            to=\"/movies/new\"\n            className=\"btn btn-primary\"\n            style={{ marginBottom: 20 }}\n          >\n            New Movie\n          </Link>\n          <p>Showing {totalCount} movies in the database.</p>\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\n          <MoviesTable\n            movies={movies}\n            sortColumn={sortColumn}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}