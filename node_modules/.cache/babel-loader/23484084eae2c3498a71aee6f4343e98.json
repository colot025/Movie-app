{"ast":null,"code":"import _objectSpread from\"/Users/christyolotu/vidly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/Users/christyolotu/vidly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from\"react\";import{Route,Redirect}from\"react-router-dom\";import auth from\"../../services/authService\";import{jsx as _jsx}from\"react/jsx-runtime\";var ProtectedRoute=function ProtectedRoute(_ref){var path=_ref.path,Component=_ref.component,_render=_ref.render,rest=_objectWithoutProperties(_ref,[\"path\",\"component\",\"render\"]);return/*#__PURE__*/_jsx(Route,_objectSpread(_objectSpread({},rest),{},{render:function render(props){if(!auth.getCurrentUser())return/*#__PURE__*/_jsx(Redirect,{to:{pathname:\"/login\",state:{from:props.location}}});return Component?/*#__PURE__*/_jsx(Component,_objectSpread({},props)):_render(props);}}));};export default ProtectedRoute;","map":{"version":3,"sources":["/Users/christyolotu/vidly/src/components/common/protectedRoute.jsx"],"names":["React","Route","Redirect","auth","ProtectedRoute","path","Component","component","render","rest","props","getCurrentUser","pathname","state","from","location"],"mappings":"mTAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,CAAgBC,QAAhB,KAAgC,kBAAhC,CACA,MAAOC,CAAAA,IAAP,KAAiB,4BAAjB,C,2CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAqD,IAAlDC,CAAAA,IAAkD,MAAlDA,IAAkD,CAAjCC,SAAiC,MAA5CC,SAA4C,CAAtBC,OAAsB,MAAtBA,MAAsB,CAAXC,IAAW,8DAC1E,mBACE,KAAC,KAAD,gCACMA,IADN,MAEE,MAAM,CAAE,gBAACC,KAAD,CAAW,CACjB,GAAI,CAACP,IAAI,CAACQ,cAAL,EAAL,CACE,mBACE,KAAC,QAAD,EACE,EAAE,CAAE,CAAEC,QAAQ,CAAE,QAAZ,CAAsBC,KAAK,CAAE,CAAEC,IAAI,CAAEJ,KAAK,CAACK,QAAd,CAA7B,CADN,EADF,CAKF,MAAOT,CAAAA,SAAS,cAAG,KAAC,SAAD,kBAAeI,KAAf,EAAH,CAA8BF,OAAM,CAACE,KAAD,CAApD,CACD,CAVH,GADF,CAcD,CAfD,CAiBA,cAAeN,CAAAA,cAAf","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport auth from \"../../services/authService\";\n\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (!auth.getCurrentUser())\n          return (\n            <Redirect\n              to={{ pathname: \"/login\", state: { from: props.location } }}\n            />\n          );\n        return Component ? <Component {...props} /> : render(props);\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n"]},"metadata":{},"sourceType":"module"}