{"ast":null,"code":"var _jsxFileName = \"/Users/christyolotu/vidly/src/components/movieForm.jsx\";\nimport React from \"react\";\nimport Form from \"./common/form\";\nimport Joi from \"joi-browser\";\nimport { genres, getGenres } from \"../services/fakeGenreService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MovieForm extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        title: \"\",\n        genreId: \"\",\n        numberInStock: \"\",\n        dailyRentalRate: \"\"\n      },\n      genres: [],\n      errors: {}\n    };\n    this.schema = {\n      _id: Joi.string(),\n      title: Joi.string().required().label(\"Title\"),\n      genreId: Joi.string().required().label(\"Genre\"),\n      numberInStock: Joi.number().required().min(0).max(100).label(\"Number in Stock\"),\n      dailyRentalRate: Joi.number().required().min(0).max(10).label(\"Daily Rental Rate\")\n    };\n\n    this.doSubmit = () => {\n      saveMovie(this.state.data);\n      this.props.history.push(\"/movies\");\n    };\n  }\n\n  componentDidMount() {\n    const genres = getGenres();\n    this.setState({\n      genres\n    });\n    const movieId = this.props.match.params.id;\n    if (movieId === \"new\") return;\n    const movie = getMovie(movieId);\n    if (!movie) return this.props.history.replace(\"/not-found\");\n    this.setState({\n      data: this.mapToViewModel(movie)\n    });\n  }\n\n  mapToViewModel(movie) {\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Movie Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [this.renderInput(\"title\", \"Title\"), this.renderSelect(\"genreId\", \"Genre\", this.state.genres), this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\"), this.renderInput(\"dailyRentalRate\", \"Rate\"), this.renderButton(\"Save\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MovieForm;","map":{"version":3,"sources":["/Users/christyolotu/vidly/src/components/movieForm.jsx"],"names":["React","Form","Joi","genres","getGenres","MovieForm","state","data","title","genreId","numberInStock","dailyRentalRate","errors","schema","_id","string","required","label","number","min","max","doSubmit","saveMovie","props","history","push","componentDidMount","setState","movieId","match","params","id","movie","getMovie","replace","mapToViewModel","genre","render","handleSubmit","renderInput","renderSelect","renderButton"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,8BAAlC;;;AAEA,MAAMC,SAAN,SAAwBJ,IAAxB,CAA6B;AAAA;AAAA;AAAA,SAC3BK,KAD2B,GACnB;AACNC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,OAAO,EAAE,EAAtB;AAA0BC,QAAAA,aAAa,EAAE,EAAzC;AAA6CC,QAAAA,eAAe,EAAE;AAA9D,OADA;AAENR,MAAAA,MAAM,EAAE,EAFF;AAGNS,MAAAA,MAAM,EAAE;AAHF,KADmB;AAAA,SAM3BC,MAN2B,GAMlB;AACPC,MAAAA,GAAG,EAAEZ,GAAG,CAACa,MAAJ,EADE;AAEPP,MAAAA,KAAK,EAAEN,GAAG,CAACa,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,OAA9B,CAFA;AAGPR,MAAAA,OAAO,EAAEP,GAAG,CAACa,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,OAA9B,CAHF;AAIPP,MAAAA,aAAa,EAAER,GAAG,CAACgB,MAAJ,GACZF,QADY,GAEZG,GAFY,CAER,CAFQ,EAGZC,GAHY,CAGR,GAHQ,EAIZH,KAJY,CAIN,iBAJM,CAJR;AASPN,MAAAA,eAAe,EAAET,GAAG,CAACgB,MAAJ,GACdF,QADc,GAEdG,GAFc,CAEV,CAFU,EAGdC,GAHc,CAGV,EAHU,EAIdH,KAJc,CAIR,mBAJQ;AATV,KANkB;;AAAA,SA4C3BI,QA5C2B,GA4ChB,MAAM;AACfC,MAAAA,SAAS,CAAC,KAAKhB,KAAL,CAAWC,IAAZ,CAAT;AAEA,WAAKgB,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,SAAxB;AACD,KAhD0B;AAAA;;AAqB3BC,EAAAA,iBAAiB,GAAG;AAClB,UAAMvB,MAAM,GAAGC,SAAS,EAAxB;AACA,SAAKuB,QAAL,CAAc;AAAExB,MAAAA;AAAF,KAAd;AAEA,UAAMyB,OAAO,GAAG,KAAKL,KAAL,CAAWM,KAAX,CAAiBC,MAAjB,CAAwBC,EAAxC;AACA,QAAIH,OAAO,KAAK,KAAhB,EAAuB;AAEvB,UAAMI,KAAK,GAAGC,QAAQ,CAACL,OAAD,CAAtB;AACA,QAAI,CAACI,KAAL,EAAY,OAAO,KAAKT,KAAL,CAAWC,OAAX,CAAmBU,OAAnB,CAA2B,YAA3B,CAAP;AAEZ,SAAKP,QAAL,CAAc;AAAEpB,MAAAA,IAAI,EAAE,KAAK4B,cAAL,CAAoBH,KAApB;AAAR,KAAd;AACD;;AAEDG,EAAAA,cAAc,CAACH,KAAD,EAAQ;AACpB,WAAO;AACLlB,MAAAA,GAAG,EAAEkB,KAAK,CAAClB,GADN;AAELN,MAAAA,KAAK,EAAEwB,KAAK,CAACxB,KAFR;AAGLC,MAAAA,OAAO,EAAEuB,KAAK,CAACI,KAAN,CAAYtB,GAHhB;AAILJ,MAAAA,aAAa,EAAEsB,KAAK,CAACtB,aAJhB;AAKLC,MAAAA,eAAe,EAAEqB,KAAK,CAACrB;AALlB,KAAP;AAOD;;AAOD0B,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA,mBACG,KAAKC,WAAL,CAAiB,OAAjB,EAA0B,OAA1B,CADH,EAEG,KAAKC,YAAL,CAAkB,SAAlB,EAA6B,OAA7B,EAAsC,KAAKlC,KAAL,CAAWH,MAAjD,CAFH,EAGG,KAAKoC,WAAL,CAAiB,eAAjB,EAAkC,iBAAlC,EAAqD,QAArD,CAHH,EAIG,KAAKA,WAAL,CAAiB,iBAAjB,EAAoC,MAApC,CAJH,EAKG,KAAKE,YAAL,CAAkB,MAAlB,CALH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AA9D0B;;AAiE7B,eAAepC,SAAf","sourcesContent":["import React from \"react\";\nimport Form from \"./common/form\";\nimport Joi from \"joi-browser\";\nimport { genres, getGenres } from \"../services/fakeGenreService\";\n\nclass MovieForm extends Form {\n  state = {\n    data: { title: \"\", genreId: \"\", numberInStock: \"\", dailyRentalRate: \"\" },\n    genres: [],\n    errors: {},\n  };\n  schema = {\n    _id: Joi.string(),\n    title: Joi.string().required().label(\"Title\"),\n    genreId: Joi.string().required().label(\"Genre\"),\n    numberInStock: Joi.number()\n      .required()\n      .min(0)\n      .max(100)\n      .label(\"Number in Stock\"),\n    dailyRentalRate: Joi.number()\n      .required()\n      .min(0)\n      .max(10)\n      .label(\"Daily Rental Rate\"),\n  };\n  componentDidMount() {\n    const genres = getGenres();\n    this.setState({ genres });\n\n    const movieId = this.props.match.params.id;\n    if (movieId === \"new\") return;\n\n    const movie = getMovie(movieId);\n    if (!movie) return this.props.history.replace(\"/not-found\");\n\n    this.setState({ data: this.mapToViewModel(movie) });\n  }\n\n  mapToViewModel(movie) {\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate,\n    };\n  }\n\n  doSubmit = () => {\n    saveMovie(this.state.data);\n\n    this.props.history.push(\"/movies\");\n  };\n  render() {\n    return (\n      <div>\n        <h1>Movie Form</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"title\", \"Title\")}\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\n          {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\n          {this.renderButton(\"Save\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default MovieForm;\n"]},"metadata":{},"sourceType":"module"}