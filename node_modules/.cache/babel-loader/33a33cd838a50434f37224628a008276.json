{"ast":null,"code":"var _jsxFileName = \"/Users/christyolotu/vidly/src/components/registerForm.jsx\";\nimport React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport * as userService from \"../services/userService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RegisterForm extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        username: \"\",\n        password: \"\",\n        name: \"\"\n      },\n      errors: {}\n    };\n    this.schema = {\n      username: Joi.string().required().email().label(\"Username\"),\n      password: Joi.string().required().min(5).label(\"Password\"),\n      name: Joi.string().required().label(\"Name\")\n    };\n\n    this.doSubmit = async () => {\n      // Call the server\n      try {\n        const response = await userService.register(this.state.data);\n        localStorage.setItem(\"token\", response.headers[\"x-auth-token\"]);\n        this.props.history.push(\"/\");\n      } catch (ex) {\n        if (ex.response && ex.response.status === 400) {\n          const errors = { ...this.state.errors\n          };\n          errors.username = ex.response.data;\n          this.setState({\n            errors\n          });\n        }\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [this.renderInput(\"username\", \"Username\"), this.renderInput(\"password\", \"Password\", \"password\"), this.renderInput(\"name\", \"Name\"), this.renderButton(\"Register\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default RegisterForm;","map":{"version":3,"sources":["/Users/christyolotu/vidly/src/components/registerForm.jsx"],"names":["React","Joi","Form","userService","RegisterForm","state","data","username","password","name","errors","schema","string","required","email","label","min","doSubmit","response","register","localStorage","setItem","headers","props","history","push","ex","status","setState","render","handleSubmit","renderInput","renderButton"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAO,KAAKC,WAAZ,MAA6B,yBAA7B;;;AAEA,MAAMC,YAAN,SAA2BF,IAA3B,CAAgC;AAAA;AAAA;AAAA,SAC9BG,KAD8B,GACtB;AACNC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,QAAQ,EAAE,EAA1B;AAA8BC,QAAAA,IAAI,EAAE;AAApC,OADA;AAENC,MAAAA,MAAM,EAAE;AAFF,KADsB;AAAA,SAK9BC,MAL8B,GAKrB;AACPJ,MAAAA,QAAQ,EAAEN,GAAG,CAACW,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,GAAgCC,KAAhC,CAAsC,UAAtC,CADH;AAEPP,MAAAA,QAAQ,EAAEP,GAAG,CAACW,MAAJ,GAAaC,QAAb,GAAwBG,GAAxB,CAA4B,CAA5B,EAA+BD,KAA/B,CAAqC,UAArC,CAFH;AAGPN,MAAAA,IAAI,EAAER,GAAG,CAACW,MAAJ,GAAaC,QAAb,GAAwBE,KAAxB,CAA8B,MAA9B;AAHC,KALqB;;AAAA,SAU9BE,QAV8B,GAUnB,YAAY;AACrB;AACA,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMf,WAAW,CAACgB,QAAZ,CAAqB,KAAKd,KAAL,CAAWC,IAAhC,CAAvB;AACAc,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,QAAQ,CAACI,OAAT,CAAiB,cAAjB,CAA9B;AACA,aAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,OAJD,CAIE,OAAOC,EAAP,EAAW;AACX,YAAIA,EAAE,CAACR,QAAH,IAAeQ,EAAE,CAACR,QAAH,CAAYS,MAAZ,KAAuB,GAA1C,EAA+C;AAC7C,gBAAMjB,MAAM,GAAG,EAAE,GAAG,KAAKL,KAAL,CAAWK;AAAhB,WAAf;AACAA,UAAAA,MAAM,CAACH,QAAP,GAAkBmB,EAAE,CAACR,QAAH,CAAYZ,IAA9B;AACA,eAAKsB,QAAL,CAAc;AAAElB,YAAAA;AAAF,WAAd;AACD;AACF;AACF,KAvB6B;AAAA;;AAwB9BmB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA,mBACG,KAAKC,WAAL,CAAiB,UAAjB,EAA6B,UAA7B,CADH,EAEG,KAAKA,WAAL,CAAiB,UAAjB,EAA6B,UAA7B,EAAyC,UAAzC,CAFH,EAGG,KAAKA,WAAL,CAAiB,MAAjB,EAAyB,MAAzB,CAHH,EAIG,KAAKC,YAAL,CAAkB,UAAlB,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AApC6B;;AAuChC,eAAe5B,YAAf","sourcesContent":["import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport * as userService from \"../services/userService\";\n\nclass RegisterForm extends Form {\n  state = {\n    data: { username: \"\", password: \"\", name: \"\" },\n    errors: {},\n  };\n  schema = {\n    username: Joi.string().required().email().label(\"Username\"),\n    password: Joi.string().required().min(5).label(\"Password\"),\n    name: Joi.string().required().label(\"Name\"),\n  };\n  doSubmit = async () => {\n    // Call the server\n    try {\n      const response = await userService.register(this.state.data);\n      localStorage.setItem(\"token\", response.headers[\"x-auth-token\"]);\n      this.props.history.push(\"/\");\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = ex.response.data;\n        this.setState({ errors });\n      }\n    }\n  };\n  render() {\n    return (\n      <div>\n        <h1>Register</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderInput(\"name\", \"Name\")}\n          {this.renderButton(\"Register\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}